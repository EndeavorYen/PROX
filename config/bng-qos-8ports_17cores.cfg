;;
; Copyright(c) 2010-2015 Intel Corporation.
; Copyright(c) 2016-2018 Viosoft Corporation.
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions
; are met:
;
;   * Redistributions of source code must retain the above copyright
;     notice, this list of conditions and the following disclaimer.
;   * Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in
;     the documentation and/or other materials provided with the
;     distribution.
;   * Neither the name of Intel Corporation nor the names of its
;     contributors may be used to endorse or promote products derived
;     from this software without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
; A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
; OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
; SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;;

;;
; This configuration sets up a system that handles the same workload as
; config/bng-qos-4ports.cfg, but on 8 ports instead of 4 and on CPU socket 1
; instead of socket 0.
;;

[eal options]
-n=6 ; force number of memory channels
no-output=no ; disable DPDK debug output

[port 0]
name=cpe0
mac=00:00:01:00:00:01
tx desc=$txd
promiscuous=$promiscuous

[port 1]
name=inet0
mac=00:00:01:00:00:02
rx desc=$rxd
tx desc=$txd
promiscuous=$promiscuous

[port 2]
name=cpe1
mac=00:00:01:00:00:03
tx desc=$txd
promiscuous=$promiscuous

[port 3]
name=inet1
mac=00:00:01:00:00:04
tx desc=$txd
rx desc=$rxd
promiscuous=$promiscuous

[port 4]
name=cpe2
mac=00:00:02:00:00:01
tx desc=$txd
rx desc=$rxd
promiscuous=$promiscuous

[port 5]
name=inet2
mac=00:00:02:00:00:02
tx desc=$txd
promiscuous=$promiscuous

[port 6]
name=cpe3
mac=00:00:02:00:00:03
tx desc=$txd
promiscuous=$promiscuous

[port 7]
name=inet3
mac=00:00:02:00:00:04
rx desc=$rxd
tx desc=$txd
promiscuous=$promiscuous

[variables]
$wk=0s0h,13s0-16s0,13s0h-16s0h,4s0,4s0h
$lb_drop=no
$wt_drop=no
$rxd=256
$txd=256
$promiscuous=yes
$mcs=128
$rs=1024

[defaults]
mempool size=256K
qinq tag=0xa888

[lua]
lpm4 = dofile("ipv4-4ports.lua")
dscp_table = dofile("dscp.lua")
user_table = dofile("user_table-131K-bng.lua")
[global]
start time=20
name=BNG + QoS
unique mempool per socket=no
mp rings=yes
enable bypass=yes

[core 0s0]
mode=master

; IPv4
;*****************************************************************************************
;##### Load Balancing receiving from CPE and from Internet ####
[core 1s0]
name=LB-cpe
task=0
mode=lbqinq
rx ring=yes
tx cores=(${wk})t0 proto=ipv4
tx cores=(${wk})t0p proto=arp
drop=$lb_drop
memcache size=$mcs
ring size=$rs

name=LB-cpe
task=1
mode=lbqinq
rx ring=yes
tx cores=(${wk})t0 proto=ipv4
tx cores=(${wk})t0p proto=arp
drop=$lb_drop
memcache size=$mcs
ring size=$rs

[core 1s0h]
name=LB-cpe
task=0
mode=lbqinq
rx ring=yes
tx cores=(${wk})t0 proto=ipv4
tx cores=(${wk})t0p proto=arp
drop=$lb_drop
memcache size=$mcs
ring size=$rs

name=LB-cpe
task=1
mode=lbqinq
rx ring=yes
tx cores=(${wk})t0 proto=ipv4
tx cores=(${wk})t0p proto=arp
drop=$lb_drop
memcache size=$mcs
ring size=$rs

[core 2s0]
name=LB-inet
task=0
mode=lbnetwork
rx port=inet0
untag mpls=yes
tx cores=(${wk})t1 proto=ipv4
drop=$lb_drop
memcache size=$mcs
ring size=$rs

name=LB-inet
task=1
mode=lbnetwork
rx port=inet1
untag mpls=yes
tx cores=(${wk})t1 proto=ipv4
drop=$lb_drop
memcache size=$mcs
ring size=$rs

[core 2s0h]
name=LB-inet
task=0
mode=lbnetwork
untag mpls=yes
rx port=inet2
tx cores=(${wk})t1 proto=ipv4
drop=$lb_drop
memcache size=$mcs
ring size=$rs

name=LB-inet
task=1
mode=lbnetwork
untag mpls=yes
rx port=inet3
tx cores=(${wk})t1 proto=ipv4
drop=$lb_drop
memcache size=$mcs
ring size=$rs

[core 3s0]
name=classify1
task=0
mode=classify
rx port=cpe0
tx cores=9s0
dscp=dscp_table
pipe tc rate=125000
pipe tb rate=125000
drop=no
user table=user_table
dscp=dscp_table

name=classify2
task=1
mode=classify
rx port=cpe1
tx cores=10s0
dscp=dscp_table
pipe tc rate=125000
pipe tb rate=125000
drop=no
user table=user_table
dscp=dscp_table

[core 3s0h]
name=classify3
task=0
mode=classify
rx port=cpe2
tx cores=11s0
dscp=dscp_table
pipe tc rate=125000
pipe tb rate=125000
drop=no
user table=user_table
dscp=dscp_table

name=classify4
task=1
mode=classify
rx port=cpe3
tx cores=12s0
dscp=dscp_table
pipe tc rate=125000
pipe tb rate=125000
drop=no
user table=user_table
dscp=dscp_table

;*****************************************************************************************
;#### Workers receiving from LB
;#### Task 0: QinQ decapsulation + gre encapsulation + routing
;#### Task 1: ARP
;#### Task 2: GRE depcapsulation + QinQ encapsulation + use learned mac
[core $wk]
name=Worker
task=0
mode=qinqdecapv4
rx ring=yes
tx ports from routing table=inet0,inet1,inet2,inet3
route table=lpm4
local ipv4=21.22.23.24
drop=$wt_drop
handle arp=yes
cpe table timeout ms=15000000
ctrl path polling frequency=10000
user table=user_table

task=1
mode=qinqencapv4
rx ring=yes
tx cores from cpe table=5s0t1,6s0t1,7s0t1,8s0t1 remap=cpe0,cpe1,cpe2,cpe3 ;map packets going to cpe0 to 3s0 and cpe1 to 4s0
classify=yes
drop=$wt_drop
ctrl path polling frequency=10000
user table=user_table
dscp=dscp_table
ring size=$rs

;*****************************************************************************************
;#### Downstream QoS receiving from workers
;#### classification done by workers
;#### Downstream QoS = QoS core and TX core
[core 5s0]
name=txqos0
task=0
mode=nop
rx ring=yes
tx port=cpe0
drop=no

task=1
mode=qos
rx ring=yes
tx cores=5s0t0
drop=yes
pipe tc rate=125000
pipe tb rate=125000
user table=user_table

[core 6s0]
name=txqos1
task=0
mode=nop
rx ring=yes
tx port=cpe1
drop=no

task=1
mode=qos
rx ring=yes
;tx port=cpe1
tx cores=6s0t0
drop=yes
pipe tc rate=125000
pipe tb rate=125000
user table=user_table

[core 7s0]
name=txqos2
task=0
mode=nop
rx ring=yes
tx port=cpe2
drop=no

task=1
mode=qos
rx ring=yes
;tx port=cpe2
tx cores=7s0t0
drop=yes
pipe tc rate=125000
pipe tb rate=125000
user table=user_table

[core 8s0]
name=txqos3
task=0
mode=nop
rx ring=yes
tx port=cpe3
drop=no

task=1
mode=qos
rx ring=yes
drop=yes
;tx port=cpe3
tx cores=8s0t0
pipe tc rate=125000
pipe tb rate=125000
user table=user_table

;*****************************************************************************************
;#### upstream QoS receiving from CPE
;#### classification done by RX, QoS core
;#### upstream QoS = RX core (classify) + QoS core
[core 9s0]
name=rxqos0
task=0
mode=qos
;rx port=cpe0
rx ring=yes
tx cores=1s0
;classify=yes
;dscp=dscp_table
pipe tc rate=125000
pipe tb rate=125000
drop=no
user table=user_table
dscp=dscp_table

[core 10s0]
name=rxqos0
task=0
mode=qos
;rx port=cpe1
rx ring=yes
;classify=yes
;dscp=dscp_table
tx cores=1s0t1
pipe tc rate=125000
pipe tb rate=125000
drop=no
user table=user_table
dscp=dscp_table

[core 11s0]
name=rxqos2
task=0
mode=qos
;rx port=cpe2
rx ring=yes
tx cores=1s0h
;classify=yes
;dscp=dscp_table
pipe tc rate=125000
pipe tb rate=125000
drop=no
user table=user_table
dscp=dscp_table

[core 12s0]
name=rxqos3
task=0
mode=qos
;rx port=cpe3
rx ring=yes
tx cores=1s0ht1
;classify=yes
;dscp=dscp_table
pipe tc rate=125000
pipe tb rate=125000
drop=no
user table=user_table
dscp=dscp_table
